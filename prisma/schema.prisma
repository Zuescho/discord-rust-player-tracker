// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Player {
  id       String         @id
  name     String

  server   RustServer?     @relation(fields: [serverId], references: [id])
  serverId String?

  sessions PlaySession[]
  guilds   GuildPlayerTracks[]
}

model PlaySession {
  id       String         @id
  start    DateTime
  stop     DateTime?
  player   Player         @relation(fields: [playerId], references: [id])
  playerId String
  server   RustServer     @relation(fields: [serverId], references: [id])
  serverId String
}

model Guild {
  id       String          @id
  name     String
  players  GuildPlayerTracks[]
  persistentMessage PersistentMessage?
  notifiees GuildUserNotifications[]

  server   RustServer?    @relation(fields: [serverId], references: [id])
  serverId String?
}

model GuildPlayerTracks {
  player   Player         @relation(fields: [playerId], references: [id])
  playerId String
  guild    Guild          @relation(fields: [guildId], references: [id])
  guildId  String

  nickname String
  notes    String?

  @@id([playerId, guildId])
}

model PersistentMessage {
  id       String          @id
  guild    Guild           @relation(fields: [guildId], references: [id])
  guildId  String          @unique
}

model User {
  id       String          @id
  notifications GuildUserNotifications[]
}

model GuildUserNotifications {
  user     User            @relation(fields: [userId], references: [id])
  userId   String

  guild    Guild           @relation(fields: [guildId], references: [id])
  guildId  String

  @@id([userId, guildId])
}

model RustServer {
  id       String          @id
  name     String
  wipe     DateTime
  mapUrl   String?
  mapPreview String?

  players  Player[]
  sessions PlaySession[]
  guilds   Guild[]
}
